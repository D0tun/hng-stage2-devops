events {
    worker_connections 1024;
}

http {
    upstream blue_pool {
        server app_blue:3000 max_fails=1 fail_timeout=5s;
    }

    upstream green_pool {
        server app_green:3000 max_fails=1 fail_timeout=5s;
    }

    # Set primary and backup based on ACTIVE_POOL
    set $primary_pool blue_pool;
    set $backup_pool green_pool;
    if ($ACTIVE_POOL = "green") {
        set $primary_pool green_pool;
        set $backup_pool blue_pool;
    }

    server {
        listen 80;

        # Fast timeouts
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;

        location / {
            proxy_pass http://$primary_pool;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;

            # Forward headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Pass app headers
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /healthz {
            access_log off;
            return 200 "healthy\n";
        }
    }
}